syntax = "proto3";
package coord;
option go_package="./coord/";


enum QUERY_TYPE {
  PAGE_RANK   = 0;
  SHORTEST_PATH  = 1;
}

message Query {
  string ClientId = 1;
  QUERY_TYPE QueryType = 2;
  repeated uint64 Nodes = 3;
  string Graph = 4;
  string TableName = 5;
}

message QueryResult {
  Query  Query = 1;
  double Result = 2;
  string Error = 3;
}

message VertexMessage {
  uint64 SourceVertexId = 1;
  uint64 DestVertexId = 2;
  int64 Value = 3;
}

message VertexMessages {
  repeated VertexMessage vertexMessages = 1;
}

message QueryProgressRequest {
}

message QueryProgressResponse {
  uint64 superstepNumber = 1;
  map<uint64, VertexMessages> messages
      = 2;
}

message WorkerVertices {
  repeated uint64 vertices = 1;
}

message FetchGraphRequest {
//  string TableName = 1;
//  int64 NumVertices = 2;
}

message FetchGraphResponse {
  map<uint32, WorkerVertices> workerVertices = 1;
}

service Coord {
  rpc StartQuery(Query) returns (QueryResult) {};
  rpc QueryProgress(QueryProgressRequest) returns
      (stream QueryProgressResponse) {};
  rpc FetchGraph(FetchGraphRequest) returns
      (FetchGraphResponse) {};
}
